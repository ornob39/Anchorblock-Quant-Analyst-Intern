
{
  "title":"Problem Set 6",
  "content":" Problem Set 6 Answer Checker Work on the assigned problems in the associated Problem Set PDF file, then use the problem set checker to find out if the answer was correct or incorrect. To check your answers put them in the appropriate box and click the \u0026lsquo;Check\u0026rsquo; button. Every checker box can do arithmetic and calculate standard functions (see calculator help). If you give decimal answers, give them to at least 3 decimal places.\nAs you work you should have pencil and paper handy for calculations and thinking!\nNote: some questions ask for a formula. For the checker we ask you to plug a value into the formula. For your pset you still need to give the whole formula.\n//DEBUG PARAMETERS //Because we don\u0026rsquo;t show solutions for pset checkers we use //this to give a showanswer button during the debugging phase var debugans = undefined; //release //var debugans = kDebugAnswer; //debug problemNumber = 0; wl(\u0026quot;\u0026lt;h3\u0026gt;Calculator\u0026lt;/h3\u0026gt;\u0026quot;); writecalculator(\u0026ldquo;psetcheckcalcid\u0026rdquo;, \u0026ldquo;Calculate\u0026rdquo;); whr(kdivcol,kdivwid);\n//Problem 1 problemNumber++; wl(problemheader(problemNumber)); wl(\u0026rsquo;\u0026rsquo;); var s; var partName, problemName, buttonLabel, answerArray, correct; s = \u0026ldquo;(a) Give the Bayes\u0026rsquo; factor for $H_0$ vs. $H_1$\u0026rdquo;; wl(s); wl(kp); partName = problemNumber + \u0026quot; (a)\u0026quot;; problemName = \u0026ldquo;prob\u0026rdquo; + partName; buttonLabel = \u0026ldquo;Check problem \u0026quot; + partName; writeNumericBox(partName+\u0026ldquo;id\u0026rdquo;, 0.16458, buttonLabel, 0.005, debugans); wl(kp); s = \u0026ldquo;(b) \u0026quot; + knoonlinecheck; wl(s); wl(kp); wl(kbr); s = \u0026ldquo;(c) \u0026quot; + knoonlinecheck; wl(s); wl(kp); wl(kbr); s = \u0026ldquo;(d) For each of the priors give the value of the posterior pdf at $θ = 0.6$\u0026rdquo;; wl(s); wl(kp); s = \u0026ldquo;Prior (d.i):\u0026rdquo;; wl(s); wl(kbr); partName = problemNumber + \u0026quot; (d.i)\u0026rdquo;; problemName = \u0026ldquo;prob\u0026rdquo; + partName; buttonLabel = \u0026ldquo;Check problem \u0026quot; + partName; writeNumericBox(partName+\u0026ldquo;id\u0026rdquo;, 5.584787, buttonLabel, 0.005, debugans); wl(kp); s = \u0026ldquo;Prior (d.ii):\u0026rdquo;; wl(s); wl(kp); partName = problemNumber + \u0026quot; (d.ii)\u0026rdquo;; problemName = \u0026ldquo;prob\u0026rdquo; + partName; buttonLabel = \u0026ldquo;Check problem \u0026quot; + partName; writeNumericBox(partName+\u0026ldquo;id\u0026rdquo;, 4.517611, buttonLabel, 0.005, debugans); wl(kp); s = \u0026ldquo;Prior (d.iii):\u0026rdquo;; wl(s); wl(kp); partName = problemNumber + \u0026quot; (d.iii)\u0026rdquo;; problemName = \u0026ldquo;prob\u0026rdquo; + partName; buttonLabel = \u0026ldquo;Check problem \u0026quot; + partName; writeNumericBox(partName+\u0026ldquo;id\u0026rdquo;, 1.477606, buttonLabel, 0.005, debugans); wl(kp); s = \u0026ldquo;Prior (d.iv):\u0026rdquo;; wl(s); wl(kp); partName = problemNumber + \u0026quot; (d.iv)\u0026rdquo;; problemName = \u0026ldquo;prob\u0026rdquo; + partName; buttonLabel = \u0026ldquo;Check problem \u0026quot; + partName; writeNumericBox(partName+\u0026ldquo;id\u0026rdquo;, 0.0, buttonLabel, 0.0005, debugans); wl(kp); s = \u0026ldquo;Prior (d.v):\u0026rdquo;; wl(s); wl(kp); partName = problemNumber + \u0026quot; (d.v)\u0026rdquo;; problemName = \u0026ldquo;prob\u0026rdquo; + partName; buttonLabel = \u0026ldquo;Check problem \u0026quot; + partName; writeNumericBox(partName+\u0026ldquo;id\u0026rdquo;, 0.001400, buttonLabel, 0.0005, debugans); wl(kp); s = \u0026ldquo;(e) Give the posterior probability of heads for each prior.\u0026rdquo;; wl(s); wl(kp); s = \u0026ldquo;Prior (e.i):\u0026rdquo;; wl(s); wl(kp); partName = problemNumber + \u0026quot; (e.i)\u0026rdquo;; problemName = \u0026ldquo;prob\u0026rdquo; + partName; buttonLabel = \u0026ldquo;Check problem \u0026quot; + partName; writeNumericBox(partName+\u0026ldquo;id\u0026rdquo;, 0.97097, buttonLabel, 0.005, debugans); wl(kp); s = \u0026ldquo;Prior (e.ii):\u0026rdquo;; wl(s); wl(kp); partName = problemNumber + \u0026quot; (e.ii)\u0026rdquo;; problemName = \u0026ldquo;prob\u0026rdquo; + partName; buttonLabel = \u0026ldquo;Check problem \u0026quot; + partName; writeNumericBox(partName+\u0026ldquo;id\u0026rdquo;, 0.96641, buttonLabel, 0.005, debugans); wl(kp); s = \u0026ldquo;Prior (e.iii):\u0026rdquo;; wl(s); wl(kp); partName = problemNumber + \u0026quot; (e.iii)\u0026rdquo;; problemName = \u0026ldquo;prob\u0026rdquo; + partName; buttonLabel = \u0026ldquo;Check problem \u0026quot; + partName; writeNumericBox(partName+\u0026ldquo;id\u0026rdquo;, 0.94591, buttonLabel, 0.005, debugans); wl(kp); s = \u0026ldquo;Prior (e.iv):\u0026rdquo;; wl(s); wl(kp); partName = problemNumber + \u0026quot; (e.iv)\u0026rdquo;; problemName = \u0026ldquo;prob\u0026rdquo; + partName; buttonLabel = \u0026ldquo;Check problem \u0026quot; + partName; writeNumericBox(partName+\u0026ldquo;id\u0026rdquo;, 0.80202, buttonLabel, 0.005, debugans); wl(kp); s = \u0026ldquo;Prior (e.v):\u0026rdquo;; wl(s); wl(kp); partName = problemNumber + \u0026quot; (e.v)\u0026rdquo;; problemName = \u0026ldquo;prob\u0026rdquo; + partName; buttonLabel = \u0026ldquo;Check problem \u0026quot; + partName; writeNumericBox(partName+\u0026ldquo;id\u0026rdquo;, 0.29626, buttonLabel, 0.005, debugans); wl(kp); s = \u0026ldquo;(f) Give the posterior odds of $H_1$ vs. $H_0$ for each prior.\u0026rdquo;; wl(s); wl(kp); s = \u0026ldquo;Prior (f.i):\u0026rdquo;; wl(s); wl(kp); partName = problemNumber + \u0026quot; (f.i)\u0026rdquo;; problemName = \u0026ldquo;prob\u0026rdquo; + partName; buttonLabel = \u0026ldquo;Check problem \u0026quot; + partName; writeNumericBox(partName+\u0026ldquo;id\u0026rdquo;, 6.076, buttonLabel, 0.005, debugans); wl(kp); s = \u0026ldquo;Prior (f.iv):\u0026rdquo;; wl(s); wl(kp); partName = problemNumber + \u0026quot; (f.iv)\u0026rdquo;; problemName = \u0026ldquo;prob\u0026rdquo; + partName; buttonLabel = \u0026ldquo;Check problem \u0026quot; + partName; writeNumericBox(partName+\u0026ldquo;id\u0026rdquo;, 0.00437, buttonLabel, 0.001, debugans); wl(kp); whr(kdivcol,kdivwid);\n//Problem 2 problemNumber++; wl(problemheader(problemNumber)); wl(\u0026rsquo;\u0026rsquo;); var s; var partName, problemName, buttonLabel, answerArray, correct; s = \u0026ldquo;Give the posterior odds that Alice filled in for Bob.\u0026rdquo;; wl(s); wl(kp); partName = problemNumber; problemName = \u0026ldquo;prob\u0026rdquo; + partName; buttonLabel = \u0026ldquo;Check problem \u0026quot; + partName; writeNumericBox(partName+\u0026ldquo;id\u0026rdquo;, 25.409, buttonLabel, 0.005, debugans); wl(kp); whr(kdivcol,kdivwid);\n//Problem 3 problemNumber++; wl(problemheader(problemNumber)); wl(\u0026rsquo;\u0026rsquo;); var s; var partName, problemName, buttonLabel, answerArray, correct; s = \u0026ldquo;(a.i) Evaluate the posterior pdf for the data $x= 0.2$ at $θ = 0.3$.\u0026rdquo;; wl(s); wl(kp); partName = problemNumber + \u0026quot; (a.i)\u0026rdquo;; problemName = \u0026ldquo;prob\u0026rdquo; + partName; buttonLabel = \u0026ldquo;Check problem \u0026quot; + partName; writeNumericBox(partName+\u0026ldquo;id\u0026rdquo;, 2.071116, buttonLabel, 0.002, debugans); wl(kp); s = \u0026ldquo;(a.ii) Evaluate the posterior pdf for the data $x = 0.2$ at $θ = 0.1$.\u0026rdquo;; wl(s); wl(kp); partName = problemNumber + \u0026quot; (a.ii)\u0026rdquo;; problemName = \u0026ldquo;prob\u0026rdquo; + partName; buttonLabel = \u0026ldquo;Check problem \u0026quot; + partName; writeNumericBox(partName+\u0026ldquo;id\u0026rdquo;, 0.0, buttonLabel, 0.0001, debugans); wl(kp); s = \u0026ldquo;(b.i) Evaluate the posterior pdf for the data $(0.1,0.5)$ at $θ = 0.7$.\u0026rdquo;; wl(s); wl(kp); partName = problemNumber + \u0026quot; (b.i)\u0026rdquo;; problemName = \u0026ldquo;prob\u0026rdquo; + partName; buttonLabel = \u0026ldquo;Check problem \u0026quot; + partName; writeNumericBox(partName+\u0026ldquo;id\u0026rdquo;, 2.040816, buttonLabel, 0.002, debugans); wl(kp); s = \u0026ldquo;(b.ii) Evaluate the posterior pdf for the data $(0.5, 0.5)$ at $θ = 0.7$.\u0026rdquo;; wl(s); wl(kp); partName = problemNumber + \u0026quot; (b.ii)\u0026rdquo;; problemName = \u0026ldquo;prob\u0026rdquo; + partName; buttonLabel = \u0026ldquo;Check problem \u0026quot; + partName; writeNumericBox(partName+\u0026ldquo;id\u0026rdquo;, 2.040816, buttonLabel, 0.002, debugans); wl(kp); s = \u0026ldquo;(b.iii) Evaluate the posterior pdf for the data $(0.1, 0.2, 0.3, 0.4, 0.5)$ at $θ = 0.7$.\u0026rdquo;; wl(s); wl(kp); partName = problemNumber + \u0026quot; (b.iii)\u0026rdquo;; problemName = \u0026ldquo;prob\u0026rdquo; + partName; buttonLabel = \u0026ldquo;Check problem \u0026quot; + partName; writeNumericBox(partName+\u0026ldquo;id\u0026rdquo;, 1.586640, buttonLabel, 0.002, debugans); wl(kp); s = \u0026ldquo;(c) Give the posterior predictive probability that Jane is less than 30 minutes late to the next class\u0026rdquo;; wl(s); wl(kp); partName = problemNumber + \u0026quot; (c)\u0026rdquo;; problemName = \u0026ldquo;prob\u0026rdquo; + partName; buttonLabel = \u0026ldquo;Check problem \u0026quot; + partName; writeNumericBox(partName+\u0026ldquo;id\u0026rdquo;, 0.82667, buttonLabel, 0.002, debugans); wl(kp); s = \u0026ldquo;(d) Give the MAP when $x = 0.6\u0026rdquo;; wl(s); wl(kp); partName = problemNumber + \u0026quot; (d)\u0026rdquo;; problemName = \u0026ldquo;prob\u0026rdquo; + partName; buttonLabel = \u0026ldquo;Check problem \u0026quot; + partName; writeNumericBox(partName+\u0026ldquo;id\u0026rdquo;, 0.6, buttonLabel, 0.0001, debugans); wl(kp); s = \u0026ldquo;(e) \u0026quot; + knoonlinecheck; wl(s); wl(kp); wl(kbr); whr(kdivcol,kdivwid);\n//Problem 4 problemNumber++; wl(problemheader(problemNumber)); wl(\u0026rsquo;\u0026rsquo;); var s; var partName, problemName, buttonLabel, answerArray, correct; s = \u0026ldquo;(a) \u0026quot; + knoonlinecheck; wl(s); wl(kp); wl(kbr); s = \u0026ldquo;(b) \u0026quot; + knoonlinecheck; wl(s); wl(kp); wl(kbr); s = \u0026ldquo;(c) \u0026quot; + knoonlinecheck; wl(s); wl(kp); wl(kbr); s = \u0026ldquo;(d.i) Give the expected value (mean) for Randall\u0026rsquo;s posterior pdf.\u0026rdquo;; wl(s); wl(kp); partName = problemNumber + \u0026quot; (d.i)\u0026rdquo;; problemName = \u0026ldquo;prob\u0026rdquo; + partName; buttonLabel = \u0026ldquo;Check problem \u0026quot; + partName; writeNumericBox(partName+\u0026ldquo;id\u0026rdquo;, 86.154, buttonLabel, 0.01, debugans); wl(kp); s = \u0026ldquo;(d.ii) Give the expected value (mean) for Mary\u0026rsquo;s posterior pdf.\u0026rdquo;; wl(s); wl(kp); partName = problemNumber + \u0026quot; (d.ii)\u0026rdquo;; problemName = \u0026ldquo;prob\u0026rdquo; + partName; buttonLabel = \u0026ldquo;Check problem \u0026quot; + partName; writeNumericBox(partName+\u0026ldquo;id\u0026rdquo;, 134.62, buttonLabel, 0.01, debugans); wl(kp); whr(kdivcol,kdivwid);\n//Problem 5 problemNumber++; wl(problemheader(problemNumber)); wl(\u0026rsquo;\u0026rsquo;); var s; var partName, problemName, buttonLabel, answerArray, correct; s = \u0026ldquo;(5.i) Give the prior odds the chosen die is 4-sided.\u0026rdquo;; wl(s); wl(kp); partName = problemNumber + \u0026ldquo;.i\u0026rdquo;; problemName = \u0026ldquo;prob\u0026rdquo; + partName; buttonLabel = \u0026ldquo;Check problem \u0026quot; + partName; writeNumericBox(partName+\u0026ldquo;id\u0026rdquo;, 1, buttonLabel, 0.0001, debugans); wl(kp); s = \u0026ldquo;(5.ii) Give the posterior odds that the chosen die is 4-sided after roll 1.\u0026rdquo;; wl(s); wl(kp); partName = problemNumber + \u0026ldquo;.ii\u0026rdquo;; problemName = \u0026ldquo;prob\u0026rdquo; + partName; buttonLabel = \u0026ldquo;Check problem \u0026quot; + partName; writeNumericBox(partName+\u0026ldquo;id\u0026rdquo;, 1.5, buttonLabel, 0.001, debugans); wl(kp); s = \u0026ldquo;(5.iii) Give the posterior odds that the chosen die is 4-sided after roll 2.\u0026rdquo;; wl(s); wl(kp); partName = problemNumber + \u0026ldquo;.iii\u0026rdquo;; problemName = \u0026ldquo;prob\u0026rdquo; + partName; buttonLabel = \u0026ldquo;Check problem \u0026quot; + partName; writeNumericBox(partName+\u0026ldquo;id\u0026rdquo;, 1.35, buttonLabel, 0.001, debugans); wl(kp); s = \u0026ldquo;(5.iv) Give the posterior odds that the chosen die is 4-sided after roll 3.\u0026rdquo;; wl(s); wl(kp); partName = problemNumber + \u0026ldquo;.iv\u0026rdquo;; problemName = \u0026ldquo;prob\u0026rdquo; + partName; buttonLabel = \u0026ldquo;Check problem \u0026quot; + partName; writeNumericBox(partName+\u0026ldquo;id\u0026rdquo;, 2.025, buttonLabel, 0.002, debugans); wl(kp); s = \u0026ldquo;(5.v) Give the posterior odds that the chosen die is 4-sided after roll 4.\u0026rdquo;; wl(s); wl(kp); partName = problemNumber + \u0026ldquo;.v\u0026rdquo;; problemName = \u0026ldquo;prob\u0026rdquo; + partName; buttonLabel = \u0026ldquo;Check problem \u0026quot; + partName; writeNumericBox(partName+\u0026ldquo;id\u0026rdquo;, 3.0375, buttonLabel, 0.001, debugans); wl(kp); s = \u0026ldquo;(5.vi) Give the posterior odds that the chosen die is 4-sided after roll 5.\u0026rdquo;; wl(s); wl(kp); partName = problemNumber + \u0026ldquo;.vi\u0026rdquo;; problemName = \u0026ldquo;prob\u0026rdquo; + partName; buttonLabel = \u0026ldquo;Check problem \u0026quot; + partName; writeNumericBox(partName+\u0026ldquo;id\u0026rdquo;, 4.5562, buttonLabel, 0.001, debugans); wl(kp); whr(kdivcol,kdivwid);\n"}


