
{
  "title":"Problem Set 4",
  "content":" Problem Set 4 Answer Checker Work on the assigned problems in the associated Problem Set PDF file, then use the problem set checker to find out if the answer was correct or incorrect. To check your answers put them in the appropriate box and click the \u0026lsquo;Check\u0026rsquo; button. Every checker box can do arithmetic and calculate standard functions (see calculator help). If you give decimal answers, give them to at least 3 decimal places.\nAs you work you should have pencil and paper handy for calculations and thinking!\nNote: some questions ask for a formula. For the checker we ask you to plug a value into the formula. For your pset you still need to give the whole formula.\n//DEBUG PARAMETERS //Because we don\u0026rsquo;t show solutions for pset checkers we use //this to give a showanswer button during the debugging phase var debugans = undefined; //release //var debugans = kDebugAnswer; //debug problemNumber = 0; wl(\u0026quot;\u0026lt;h3\u0026gt;Calculator\u0026lt;/h3\u0026gt;\u0026quot;); writecalculator(\u0026ldquo;psetcheckcalcid\u0026rdquo;, \u0026ldquo;Calculate\u0026rdquo;); whr(kdivcol,kdivwid);\n//Problem 1 problemNumber++; wl(problemheader(problemNumber)); wl(\u0026rsquo;\u0026rsquo;); var s; var partName, problemName, buttonLabel, answerArray, correct; s = \u0026ldquo;(a) Let $x = 0.3$ and $λ = 2$ and give $P(X ≥ x)$.\u0026rdquo;; wl(s); wl(kp); partName = problemNumber + \u0026quot; (a)\u0026quot;; problemName = \u0026ldquo;prob\u0026rdquo; + partName; buttonLabel = \u0026ldquo;Check problem \u0026quot; + partName; writeNumericBox(partName+\u0026ldquo;id\u0026rdquo;, 0.54881, buttonLabel, 0.001, debugans); wl(kp); s = \u0026ldquo;(b) Let $λ = 2$ and give $F_T(0.25)$.\u0026rdquo;; wl(s); wl(kp); partName = problemNumber + \u0026quot; (b)\u0026rdquo;; problemName = \u0026ldquo;prob\u0026rdquo; + partName; buttonLabel = \u0026ldquo;Check problem \u0026quot; + partName; writeNumericBox(partName+\u0026ldquo;id\u0026rdquo;, 0.63212, buttonLabel, 0.001, debugans); wl(kp); s = \u0026ldquo;(c)} Expected time before a bulb fails.\u0026rdquo;; wl(s); wl(kp); partName = problemNumber + \u0026quot; (c)\u0026rdquo;; problemName = \u0026ldquo;prob\u0026rdquo; + partName; buttonLabel = \u0026ldquo;Check problem \u0026quot; + partName; writeNumericBox(partName+\u0026ldquo;id\u0026rdquo;, 0.1, buttonLabel, 0.001, debugans); wl(kp); whr(kdivcol,kdivwid);\n//Problem 2 problemNumber++; wl(problemheader(problemNumber)); wl(\u0026rsquo;\u0026rsquo;); var s; var partName, problemName, buttonLabel, answerArray, correct; s = \u0026ldquo;Give answers to 3 decimal places. (Or give as fraction like 4/7.)\u0026rdquo;; wl(s); wl(kp); s = \u0026ldquo;(a.1) Give the value of $c$.\u0026rdquo;; wl(s); wl(kp); partName = problemNumber + \u0026quot; (a.1)\u0026rdquo;; problemName = \u0026ldquo;prob\u0026rdquo; + partName; buttonLabel = \u0026ldquo;Check problem \u0026quot; + partName; writeNumericBox(partName+\u0026ldquo;id\u0026rdquo;, 1.7143, buttonLabel, 0.001, debugans); wl(kp) s = \u0026ldquo;(a.2) Give $F(0.3, 0.7)$\u0026rdquo;; wl(s); wl(kp); partName = problemNumber + \u0026quot; (a.2)\u0026rdquo;; problemName = \u0026ldquo;prob\u0026rdquo; + partName; buttonLabel = \u0026ldquo;Check problem \u0026quot; + partName; writeNumericBox(partName+\u0026ldquo;id\u0026rdquo;, 0.029700, buttonLabel, 0.001, debugans); wl(kp) s = \u0026ldquo;(b.1) Give $F_X(0.5)$.\u0026rdquo;; wl(s); wl(kp); partName = problemNumber + \u0026quot; (b.1)\u0026rdquo;; problemName = \u0026ldquo;prob\u0026rdquo; + partName; buttonLabel = \u0026ldquo;Check problem \u0026quot; + partName; writeNumericBox(partName+\u0026ldquo;id\u0026rdquo;, 0.17857, buttonLabel, 0.001, debugans); wl(kp) s = \u0026ldquo;(b.2) Give $f_X(0.5)$.\u0026rdquo;; wl(s); wl(kp); partName = problemNumber + \u0026quot; (b.2)\u0026rdquo;; problemName = \u0026ldquo;prob\u0026rdquo; + partName; buttonLabel = \u0026ldquo;Check problem \u0026quot; + partName; writeNumericBox(partName+\u0026ldquo;id\u0026rdquo;, 0.85714, buttonLabel, 0.01, debugans); wl(kp) s = \u0026ldquo;(b.3) Give $F_Y(0.5)$.\u0026rdquo;; wl(s); wl(kp); partName = problemNumber + \u0026quot; (b.3)\u0026rdquo;; problemName = \u0026ldquo;prob\u0026rdquo; + partName; buttonLabel = \u0026ldquo;Check problem \u0026quot; + partName; writeNumericBox(partName+\u0026ldquo;id\u0026rdquo;, 0.39286, buttonLabel, 0.001, debugans); wl(kp) s = \u0026ldquo;(b.4) Give $f_Y(0.5)$\u0026rdquo;; wl(s); wl(kp); partName = problemNumber + \u0026quot; (b.4)\u0026rdquo;; problemName = \u0026ldquo;prob\u0026rdquo; + partName; buttonLabel = \u0026ldquo;Check problem \u0026quot; + partName; writeNumericBox(partName+\u0026ldquo;id\u0026rdquo;, 1.0, buttonLabel, 0.001, debugans); wl(kp) s = \u0026ldquo;(c.1) Give $E(X)$.\u0026rdquo;; wl(s); wl(kp); partName = problemNumber + \u0026quot; (c.1)\u0026rdquo;; problemName = \u0026ldquo;prob\u0026rdquo; + partName; buttonLabel = \u0026ldquo;Check problem \u0026quot; + partName; writeNumericBox(partName+\u0026ldquo;id\u0026rdquo;, 0.71429, buttonLabel, 0.001, debugans); wl(kp) s = \u0026ldquo;(c.2) Give Var$(X)$.\u0026rdquo; wl(s); wl(kp); partName = problemNumber + \u0026quot; (c.2)\u0026rdquo;; problemName = \u0026ldquo;prob\u0026rdquo; + partName; buttonLabel = \u0026ldquo;Check problem \u0026quot; + partName; writeNumericBox(partName+\u0026ldquo;id\u0026rdquo;, 0.046939, buttonLabel, 0.001, debugans); wl(kp) wl(emphtext(\u0026ldquo;The following are not part of the problem, but you need them for part (d).\u0026rdquo;)); wl(kp); s = \u0026ldquo;(X.1) Give $E(Y)$.\u0026rdquo;; wl(s); wl(kp); partName = problemNumber + \u0026quot; (X.1)\u0026rdquo;; problemName = \u0026ldquo;prob\u0026rdquo; + partName; buttonLabel = \u0026ldquo;Check problem \u0026quot; + partName; writeNumericBox(partName+\u0026ldquo;id\u0026rdquo;, 0.57143, buttonLabel, 0.001, debugans); wl(kp) s = \u0026ldquo;(X.2) Give Var$(Y)$.\u0026rdquo;; wl(s); wl(kp); partName = problemNumber + \u0026quot; (X.2)\u0026rdquo;; problemName = \u0026ldquo;prob\u0026rdquo; + partName; buttonLabel = \u0026ldquo;Check problem \u0026quot; + partName; writeNumericBox(partName+\u0026ldquo;id\u0026rdquo;, 0.078231, buttonLabel, 0.001, debugans); wl(kp) s = \u0026ldquo;(d.1) Give Cov($X,Y$). \u0026quot; + emphtext(\u0026quot;(Give to 4 decimal places)\u0026rdquo;); wl(s); wl(kp); partName = problemNumber + \u0026quot; (d.1)\u0026rdquo;; problemName = \u0026ldquo;prob\u0026rdquo; + partName; buttonLabel = \u0026ldquo;Check problem \u0026quot; + partName; writeNumericBox(partName+\u0026ldquo;id\u0026rdquo;, -0.0034014, buttonLabel, 0.0001, debugans); wl(kp) s = \u0026ldquo;(d.2) Give Cor($X,Y$).\u0026rdquo;; wl(s); wl(kp); partName = problemNumber + \u0026quot; (d.2)\u0026rdquo;; problemName = \u0026ldquo;prob\u0026rdquo; + partName; buttonLabel = \u0026ldquo;Check problem \u0026quot; + partName; writeNumericBox(partName+\u0026ldquo;id\u0026rdquo;, -0.056130, buttonLabel, 0.001, debugans); wl(kp) whr(kdivcol,kdivwid);\n//Problem 3 problemNumber++; wl(problemheader(problemNumber)); wl(\u0026rsquo;\u0026rsquo;); var s; var partName, problemName, buttonLabel, answerArray, correct; s = \u0026ldquo;(a) Probability at least 52.5% prefer Erika.\u0026rdquo;; wl(s); wl(kp); partName = problemNumber + \u0026quot; (a)\u0026rdquo;; problemName = \u0026ldquo;prob\u0026rdquo; + partName; buttonLabel = \u0026ldquo;Check problem \u0026quot; + partName; writeNumericBox(partName+\u0026ldquo;id\u0026rdquo;, 0.1586553, buttonLabel, 0.004, debugans); wl(kp) s = \u0026ldquo;(b) Probability less than 25\\% prefer Peter, Jon or Jerry.\u0026rdquo;; wl(s); wl(kp); partName = problemNumber + \u0026quot; (b)\u0026rdquo;; problemName = \u0026ldquo;prob\u0026rdquo; + partName; buttonLabel = \u0026ldquo;Check problem \u0026quot; + partName; writeNumericBox(partName+\u0026ldquo;id\u0026rdquo;, 0.0145, buttonLabel, 0.001, debugans); wl(kp) whr(kdivcol,kdivwid);\n//Problem 4 problemNumber++; wl(problemheader(problemNumber)); wl(\u0026rsquo;\u0026rsquo;); var s; var partName, problemName, buttonLabel, answerArray, correct; s = \u0026ldquo;Estimate $p$.\u0026rdquo;; wl(s); wl(kp); partName = problemNumber + \u0026quot; (b)\u0026rdquo;; problemName = \u0026ldquo;prob\u0026rdquo; + partName; buttonLabel = \u0026ldquo;Check problem \u0026quot; + partName; writeNumericBox(partName+\u0026ldquo;id\u0026rdquo;, 0.02534, buttonLabel, 0.002, debugans); wl(kp) whr(kdivcol,kdivwid);\n//Problem 5 problemNumber++; wl(problemheader(problemNumber)); wl(\u0026rsquo;\u0026rsquo;); var s; var partName, problemName, buttonLabel, answerArray, correct; s = knoonlinecheck; wl(s); wl(kp); wl(kbr); whr(kdivcol,kdivwid);\n//Problem 6 problemNumber++; wl(problemheader(problemNumber)); wl(\u0026rsquo;\u0026rsquo;); var s; var partName, problemName, buttonLabel, answerArray, correct; s = \u0026ldquo;(a) Joint distribution: \u0026quot; + emphtext(\u0026ldquo;no answer given\u0026rdquo;); wl(s); wl(kp); s = \u0026ldquo;(a.1) Give Cov$(X,Y)$ for $c$ = 0.1.\u0026rdquo;; wl(s); wl(kp); partName = problemNumber + \u0026quot; (a.1)\u0026rdquo;; problemName = \u0026ldquo;prob\u0026rdquo; + partName; buttonLabel = \u0026ldquo;Check problem \u0026quot; + partName; writeNumericBox(partName+\u0026ldquo;id\u0026rdquo;, -.6, buttonLabel, 0.01, debugans); wl(kp) s = \u0026ldquo;(a.2) Give Cor$(X,Y)$ for $c$ = 0.3.\u0026rdquo; wl(s); wl(kp); partName = problemNumber + \u0026quot; (a.2)\u0026rdquo;; problemName = \u0026ldquo;prob\u0026rdquo; + partName; buttonLabel = \u0026ldquo;Check problem \u0026quot; + partName; writeNumericBox(partName+\u0026ldquo;id\u0026rdquo;, .2, buttonLabel, 0.01, debugans); wl(kp) whr(kdivcol,kdivwid);\n//Problem 7 problemNumber++; wl(problemheader(problemNumber)); wl(\u0026rsquo;\u0026rsquo;); var s; var partName, problemName, buttonLabel, answerArray, correct; s = \u0026ldquo;(a.1) Give $1000*f(7,12)$.\u0026rdquo;; wl(s); wl(kp); partName = problemNumber + \u0026quot; (a.1)\u0026rdquo;; problemName = \u0026ldquo;prob\u0026rdquo; + partName; buttonLabel = \u0026ldquo;Check problem \u0026quot; + partName; writeNumericBox(partName+\u0026ldquo;id\u0026rdquo;, 0.27778, buttonLabel, 0.005, debugans); wl(kp) s = \u0026ldquo;(a.2) Give $1000*F(7,12)$.\u0026rdquo;; wl(s); wl(kp); partName = problemNumber + \u0026quot; (a.2)\u0026rdquo;; problemName = \u0026ldquo;prob\u0026rdquo; + partName; buttonLabel = \u0026ldquo;Check problem \u0026quot; + partName; writeNumericBox(partName+\u0026ldquo;id\u0026rdquo;, 23.333, buttonLabel, 0.01, debugans); wl(kp) s = \u0026ldquo;(b) Give the probability Alice arrives before 12:30\u0026rdquo;; wl(s); wl(kp); partName = problemNumber + \u0026quot; (b)\u0026rdquo;; problemName = \u0026ldquo;prob\u0026rdquo; + partName; buttonLabel = \u0026ldquo;Check problem \u0026quot; + partName; writeNumericBox(partName+\u0026ldquo;id\u0026rdquo;, .5, buttonLabel, 0.001, debugans); wl(kp) s = \u0026ldquo;(c) Give the probability Alice arrives before 12:15 and Bob arrives between 12:30 and 12:45.\u0026rdquo;; wl(s); wl(kp); partName = problemNumber + \u0026quot; (c)\u0026rdquo;; problemName = \u0026ldquo;prob\u0026rdquo; + partName; buttonLabel = \u0026ldquo;Check problem \u0026quot; + partName; writeNumericBox(partName+\u0026ldquo;id\u0026rdquo;, .0625, buttonLabel, 0.001, debugans); wl(kp) s = \u0026ldquo;(d) Give the probability Alice arrives less than 5 minutes after Bob. (This includes Alice arriving \u0026quot; + emphtext(\u0026lsquo;before\u0026rsquo;) + \u0026quot; Bob.)\u0026rdquo;; wl(s); wl(kp); partName = problemNumber + \u0026quot; (d)\u0026rdquo;; problemName = \u0026ldquo;prob\u0026rdquo; + partName; buttonLabel = \u0026ldquo;Check problem \u0026quot; + partName; writeNumericBox(partName+\u0026ldquo;id\u0026rdquo;, 0.57986, buttonLabel, 0.001, debugans); wl(kp) s = \u0026ldquo;(e) Give the probability Alice and Bob have lunch.\u0026rdquo;; wl(s); wl(kp); partName = problemNumber + \u0026quot; (e)\u0026rdquo;; problemName = \u0026ldquo;prob\u0026rdquo; + partName; buttonLabel = \u0026ldquo;Check problem \u0026quot; + partName; writeNumericBox(partName+\u0026ldquo;id\u0026rdquo;, 0.43750, buttonLabel, 0.001, debugans); wl(kp) whr(kdivcol,kdivwid);\n"}


