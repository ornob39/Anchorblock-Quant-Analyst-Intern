
{
  "title":"Problem Set 8",
  "content":" Problem Set 8 Answer Checker Work on the assigned problems in the associated Problem Set PDF file, then use the problem set checker to find out if the answer was correct or incorrect. To check your answers put them in the appropriate box and click the \u0026lsquo;Check\u0026rsquo; button. Every checker box can do arithmetic and calculate standard functions (see calculator help). If you give decimal answers, give them to at least 3 decimal places.\nAs you work you should have pencil and paper handy for calculations and thinking!\nNote: some questions ask for a formula. For the checker we ask you to plug a value into the formula. For your pset you still need to give the whole formula.\n//DEBUG PARAMETERS //Because we don\u0026rsquo;t show solutions for pset checkers we use //this to give a showanswer button during the debugging phase var debugans = undefined; //release //var debugans = kDebugAnswer; //debug problemNumber = 0; wl(\u0026quot;\u0026lt;h3\u0026gt;Calculator\u0026lt;/h3\u0026gt;\u0026quot;); writecalculator(\u0026ldquo;psetcheckcalcid\u0026rdquo;, \u0026ldquo;Calculate\u0026rdquo;); whr(kdivcol,kdivwid);\n//Problem 1 problemNumber++; wl(problemheader(problemNumber)); wl(\u0026rsquo;\u0026rsquo;); var s; var partName, problemName, buttonLabel, answerArray, correct; s = \u0026ldquo;(a) Hint: the rejection region is one-sided.\u0026rdquo;; wl(s); wl(kp); s = \u0026ldquo;(a.i) Give smallest value in the rejection region\u0026rdquo;; wl(s); wl(kp); partName = problemNumber + \u0026quot; (a.i)\u0026quot;; problemName = \u0026ldquo;prob\u0026rdquo; + partName; buttonLabel = \u0026ldquo;Check problem \u0026quot; + partName; writeNumericBox(partName+\u0026ldquo;id\u0026rdquo;, 0, buttonLabel, 0.001, debugans); wl(kp); s = \u0026ldquo;(a.ii) Give largest value in the rejection region\u0026rdquo;; wl(s); wl(kp); partName = problemNumber + \u0026quot; (a.ii)\u0026rdquo;; problemName = \u0026ldquo;prob\u0026rdquo; + partName; buttonLabel = \u0026ldquo;Check problem \u0026quot; + partName; writeNumericBox(partName+\u0026ldquo;id\u0026rdquo;, 2, buttonLabel, 0.001, debugans); wl(kp); s = \u0026ldquo;(a.iii) Give the $p$-value\u0026rdquo;; wl(s); wl(kp); partName = problemNumber + \u0026quot; (a.iii)\u0026rdquo;; problemName = \u0026ldquo;prob\u0026rdquo; + partName; buttonLabel = \u0026ldquo;Check problem \u0026quot; + partName; writeNumericBox(partName+\u0026ldquo;id\u0026rdquo;, .072998, buttonLabel, 0.001, debugans); wl(kp); s = \u0026ldquo;(b.i) Give smallest value in the rejection region\u0026rdquo;; wl(s); wl(kp); partName = problemNumber + \u0026quot; (b.i)\u0026rdquo;; problemName = \u0026ldquo;prob\u0026rdquo; + partName; buttonLabel = \u0026ldquo;Check problem \u0026quot; + partName; writeNumericBox(partName+\u0026ldquo;id\u0026rdquo;, 9, buttonLabel, 0.001, debugans); wl(kp); s = \u0026ldquo;(b.ii) Give the $p$-value\u0026rdquo;; wl(s); wl(kp); partName = problemNumber + \u0026quot; (b.ii)\u0026rdquo;; problemName = \u0026ldquo;prob\u0026rdquo; + partName; buttonLabel = \u0026ldquo;Check problem \u0026quot; + partName; writeNumericBox(partName+\u0026ldquo;id\u0026rdquo;, .032715, buttonLabel, 0.001, debugans); wl(kp); s = \u0026ldquo;(c) \u0026quot; + knoonlinecheck; wl(s); wl(kp); wl(kbr); s = \u0026ldquo;(d) \u0026quot; + knoonlinecheck; wl(s); wl(kp); wl(kbr); s = \u0026ldquo;(e) \u0026quot; + knoonlinecheck; wl(s); wl(kp); wl(kbr); whr(kdivcol,kdivwid);\n//Problem 2 problemNumber++; wl(problemheader(problemNumber)); wl(\u0026rsquo;\u0026rsquo;); var s; var partName, problemName, buttonLabel, answerArray, correct; s = \u0026ldquo;(i) Give value of the $X^2$ test statistic\u0026rdquo;; wl(s); wl(kp); partName = problemNumber + \u0026quot; (i)\u0026rdquo;; problemName = \u0026ldquo;prob\u0026rdquo; + partName; buttonLabel = \u0026ldquo;Check problem \u0026quot; + partName; writeNumericBox(partName+\u0026ldquo;id\u0026rdquo;, 25.7372, buttonLabel, 0.001, debugans); wl(kp); s = \u0026ldquo;(ii) Give the $p$-value\u0026rdquo;; wl(s); wl(kp); partName = problemNumber + \u0026quot; (ii)\u0026rdquo;; problemName = \u0026ldquo;prob\u0026rdquo; + partName; buttonLabel = \u0026ldquo;Check problem \u0026quot; + partName; writeNumericBox(partName+\u0026ldquo;id\u0026rdquo;, 0.0071, buttonLabel, 0.001, debugans); wl(kp); whr(kdivcol,kdivwid);\n//Problem 3 problemNumber++; wl(problemheader(problemNumber)); wl(\u0026rsquo;\u0026rsquo;); var s; var partName, problemName, buttonLabel, answerArray, correct; s = emphtext(\u0026quot;(You only need to use one of the $G$ or $X^2$ statistics.)\u0026rdquo;); wl(s); wl(kp); s = \u0026ldquo;(i) Give the $G$ statistic\u0026rdquo;; wl(s); wl(kp); partName = problemNumber + \u0026quot; (i)\u0026rdquo;; problemName = \u0026ldquo;prob\u0026rdquo; + partName; buttonLabel = \u0026ldquo;Check problem \u0026quot; + partName; writeNumericBox(partName+\u0026ldquo;id\u0026rdquo;, 56.3919, buttonLabel, 0.001, debugans); wl(kp); s = \u0026ldquo;(ii) Give value of the $X^2$ test statistic\u0026rdquo;; wl(s); wl(kp); partName = problemNumber + \u0026quot; (ii)\u0026rdquo;; problemName = \u0026ldquo;prob\u0026rdquo; + partName; buttonLabel = \u0026ldquo;Check problem \u0026quot; + partName; writeNumericBox(partName+\u0026ldquo;id\u0026rdquo;, 62.69983, buttonLabel, 0.001, debugans); wl(kp); s = \u0026ldquo;(iii) Give the $p$-value to 5 decimal places\u0026rdquo;; wl(s); wl(kp); partName = problemNumber + \u0026quot; (iii)\u0026rdquo;; problemName = \u0026ldquo;prob\u0026rdquo; + partName; buttonLabel = \u0026ldquo;Check problem \u0026quot; + partName; writeNumericBox(partName+\u0026ldquo;id\u0026rdquo;, 0, buttonLabel, 0.001, debugans); wl(kp); whr(kdivcol,kdivwid);\n//Problem 4 problemNumber++; wl(problemheader(problemNumber)); wl(\u0026rsquo;\u0026rsquo;); var s; var partName, problemName, buttonLabel, answerArray, correct; s = \u0026ldquo;(a) Give the $p$-value\u0026rdquo;; wl(s); wl(kp); partName = problemNumber + \u0026quot; (a)\u0026rdquo;; problemName = \u0026ldquo;prob\u0026rdquo; + partName; buttonLabel = \u0026ldquo;Check problem \u0026quot; + partName; writeNumericBox(partName+\u0026ldquo;id\u0026rdquo;, .9484, buttonLabel, 0.001, debugans); wl(kp); s = \u0026ldquo;(b.i) Give the $F$-statistic\u0026rdquo;; wl(s); wl(kp); partName = problemNumber + \u0026quot; (b.i)\u0026rdquo;; problemName = \u0026ldquo;prob\u0026rdquo; + partName; buttonLabel = \u0026ldquo;Check problem \u0026quot; + partName; writeNumericBox(partName+\u0026ldquo;id\u0026rdquo;, .9703, buttonLabel, 0.001, debugans); wl(kp); s = \u0026ldquo;(b.ii) Give the $p$-value\u0026rdquo;; wl(s); wl(kp); partName = problemNumber + \u0026quot; (b.ii)\u0026rdquo;; problemName = \u0026ldquo;prob\u0026rdquo; + partName; buttonLabel = \u0026ldquo;Check problem \u0026quot; + partName; writeNumericBox(partName+\u0026ldquo;id\u0026rdquo;, .9484, buttonLabel, 0.001, debugans); wl(kp); whr(kdivcol,kdivwid);\n//Problem 5 problemNumber++; wl(problemheader(problemNumber)); wl(\u0026rsquo;\u0026rsquo;); var s; var partName, problemName, buttonLabel, answerArray, correct; s = \u0026ldquo;(a.i) Give the $F$-statistic\u0026rdquo;; wl(s); wl(kp); partName = problemNumber + \u0026quot; (a.i)\u0026rdquo;; problemName = \u0026ldquo;prob\u0026rdquo; + partName; buttonLabel = \u0026ldquo;Check problem \u0026quot; + partName; writeNumericBox(partName+\u0026ldquo;id\u0026rdquo;, 6.0945, buttonLabel, 0.001, debugans); wl(kp); s = \u0026ldquo;(a.ii) Give the $p$-value to 5 decimal places\u0026rdquo;; wl(s); wl(kp); partName = problemNumber + \u0026quot; (a.ii)\u0026rdquo;; problemName = \u0026ldquo;prob\u0026rdquo; + partName; buttonLabel = \u0026ldquo;Check problem \u0026quot; + partName; writeNumericBox(partName+\u0026ldquo;id\u0026rdquo;, .00041, buttonLabel, 0.001, debugans); wl(kp); s = \u0026ldquo;(b) To compare all of the means two at a time requires how many tests?\u0026rdquo;; wl(s); wl(kp); partName = problemNumber + \u0026quot; (b)\u0026rdquo;; problemName = \u0026ldquo;prob\u0026rdquo; + partName; buttonLabel = \u0026ldquo;Check problem \u0026quot; + partName; writeNumericBox(partName+\u0026ldquo;id\u0026rdquo;, 6, buttonLabel, 0.00001, debugans); wl(kp); s = emphtext(\u0026ldquo;Comparing 10-day growth vs. clean shaven:\u0026rdquo;);; wl(s); wl(kbr); s = \u0026ldquo;(c.i) Give the $t$-statistic\u0026rdquo;; wl(s); wl(kp); partName = problemNumber + \u0026quot; (c.i)\u0026rdquo;; problemName = \u0026ldquo;prob\u0026rdquo; + partName; buttonLabel = \u0026ldquo;Check problem \u0026quot; + partName; writeNumericBox(partName+\u0026ldquo;id\u0026rdquo;, 3.22314, buttonLabel, 0.001, debugans); wl(kp); s = \u0026ldquo;(c.ii) Give the one-sided $p$-value to 5 decimal places\u0026rdquo; wl(s); wl(kp); partName = problemNumber + \u0026quot; (c.ii)\u0026rdquo;; problemName = \u0026ldquo;prob\u0026rdquo; + partName; buttonLabel = \u0026ldquo;Check problem \u0026quot; + partName; writeNumericBox(partName+\u0026ldquo;id\u0026rdquo;, .00066, buttonLabel, 0.00001, debugans); wl(kp); s = emphtext(\u0026ldquo;Comparing 10-day growth vs. 5-day growth:\u0026rdquo;); wl(s); wl(kbr); s = \u0026ldquo;(c.iii) Give the $t$-statistic\u0026rdquo;; wl(s); wl(kp); partName = problemNumber + \u0026quot; (c.iii)\u0026rdquo;; problemName = \u0026ldquo;prob\u0026rdquo; + partName; buttonLabel = \u0026ldquo;Check problem \u0026quot; + partName; writeNumericBox(partName+\u0026ldquo;id\u0026rdquo;, 3.84587, buttonLabel, 0.001, debugans); wl(kp); s = \u0026ldquo;(c.iv) Give the one-sided $p$-value to 5 decimal places\u0026rdquo;; wl(s); wl(kp); partName = problemNumber + \u0026quot; (c.iv)\u0026rdquo;; problemName = \u0026ldquo;prob\u0026rdquo; + partName; buttonLabel = \u0026ldquo;Check problem \u0026quot; + partName; writeNumericBox(partName+\u0026ldquo;id\u0026rdquo;, .00007, buttonLabel, 0.00001, debugans); wl(kp); s = emphtext(\u0026ldquo;Comparing 10-day growth vs. full beard:\u0026rdquo;); wl(s); wl(kbr); s = \u0026ldquo;(c.v) Give the $t$-statistic\u0026rdquo;; wl(s); wl(kp); partName = problemNumber + \u0026quot; (c.v)\u0026rdquo;; problemName = \u0026ldquo;prob\u0026rdquo; + partName; buttonLabel = \u0026ldquo;Check problem \u0026quot; + partName; writeNumericBox(partName+\u0026ldquo;id\u0026rdquo;, 1.98273, buttonLabel, 0.001, debugans); wl(kp); s = \u0026ldquo;(c.vi) Give the one-sided $p$-value to 5 decimal places\u0026rdquo;; wl(s); wl(kp); partName = problemNumber + \u0026quot; (c.vi)\u0026rdquo;; problemName = \u0026ldquo;prob\u0026rdquo; + partName; buttonLabel = \u0026ldquo;Check problem \u0026quot; + partName; writeNumericBox(partName+\u0026ldquo;id\u0026rdquo;, .02389, buttonLabel, 0.001, debugans); wl(kp); whr(kdivcol,kdivwid);\n"}


