
{
  "title":"Reading Questions 24",
  "content":" Reading Questions Answer Checker To check your answers put them in the appropriate box and click the \u0026lsquo;Check\u0026rsquo; button. Every checker box can do arithmetic and calculate standard functions (see calculator help). If you give decimal answers, give them to at least 3 decimal places.\nAs you work you should have pencil and paper handy for calculations and thinking!\nNote: some questions ask for a formula. For the checker we ask you to plug a value into the formula. For your pset you still need to give the whole formula.\n//DEBUG PARAMETERS //Because we don\u0026rsquo;t show solutions for pset checkers we use //this to give a showanswer button during the debugging phase var debugans = undefined; //release //var debugans = kDebugAnswer; //debug problemNumber = 0; wl(\u0026quot;\u0026lt;h3\u0026gt;Calculator\u0026lt;/h3\u0026gt;\u0026quot;); writecalculator(\u0026ldquo;psetcheckcalcid\u0026rdquo;, \u0026ldquo;Calculate\u0026rdquo;); whr(kdivcol,kdivwid);\n//Problem 1 problemNumber++; wl(problemheader(problemNumber)); var s; var partName, problemName, buttonLabel, answerArray, correct; s = \u0026ldquo;If the original data has $n$ points then a bootstrap sample should have:\u0026rdquo;; wl(s); wl(kbr); partName = problemNumber; problemName = \u0026ldquo;prob\u0026rdquo; + partName; buttonLabel = \u0026ldquo;Check problem \u0026quot; + partName; correct = \u0026ldquo;The same number of points as the original because we want the bootstrap statistic to mimic the statistic on the original data.\u0026rdquo;; var answerArray = [\u0026ldquo;Fewer points than the original because there is less information in the sample than in the underlying distribution.\u0026rdquo;, correct, \u0026ldquo;Many more points than the original because we have the computing power to handle a lot of data.\u0026rdquo;]; writeMultipleChoiceRadioGroup(answerArray, problemName, correct, buttonLabel); wl(kp); whr(kdivcol,kdivwid);\n//Problem 2 problemNumber++; wl(problemheader(problemNumber)); var s; var partName, problemName, buttonLabel, answerArray, correct; s = \u0026ldquo;True or false: it is important to verify the assumption that the data is normal before running the parametric bootstrap.\u0026rdquo;; wl(s); wl(kbr); partName = problemNumber; problemName = \u0026ldquo;prob\u0026rdquo; + partName; buttonLabel = \u0026ldquo;Check problem \u0026quot; + partName; correct = \u0026ldquo;False\u0026rdquo;; var answerArray = [\u0026ldquo;True\u0026rdquo;, correct]; writeMultipleChoiceRadioGroup(answerArray, problemName, correct, buttonLabel); wl(kp); whr(kdivcol,kdivwid);\n//Problem 3 problemNumber++; wl(problemheader(problemNumber)); var s; var partName, problemName, buttonLabel, answerArray, correct; s = \u0026ldquo;True or false: the bootstrap is only effective if we know the sampling distribution for the statistic being used as an estimator.\u0026rdquo;; wl(s); wl(kbr); partName = problemNumber; problemName = \u0026ldquo;prob\u0026rdquo; + partName; buttonLabel = \u0026ldquo;Check problem \u0026quot; + partName; correct = \u0026ldquo;False\u0026rdquo;; var answerArray = [\u0026ldquo;True\u0026rdquo;, correct]; writeMultipleChoiceRadioGroup(answerArray, problemName, correct, buttonLabel); wl(kp); whr(kdivcol,kdivwid);\n//Problem 4 problemNumber++; wl(problemheader(problemNumber)); var s; var partName, problemName, buttonLabel, answerArray, correct; s = \u0026ldquo;True or false: the bootstrap percentile method is not as robust as the bootstrap using differences.\u0026rdquo;; wl(s); wl(kbr); partName = problemNumber; problemName = \u0026ldquo;prob\u0026rdquo; + partName; buttonLabel = \u0026ldquo;Check problem \u0026quot; + partName; correct = \u0026ldquo;True\u0026rdquo;; var answerArray = [correct, \u0026lsquo;False\u0026rsquo;]; writeMultipleChoiceRadioGroup(answerArray, problemName, correct, buttonLabel); wl(kp); whr(kdivcol,kdivwid);\n"}


