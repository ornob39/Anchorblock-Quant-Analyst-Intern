
{
  "title":"Reading Questions for R",
  "content":" Reading Questions Answer Checker To check your answers put them in the appropriate box and click the \u0026lsquo;Check\u0026rsquo; button. Every checker box can do arithmetic and calculate standard functions (see calculator help). If you give decimal answers, give them to at least 3 decimal places.\nAs you work you should have pencil and paper handy for calculations and thinking!\nNote: some questions ask for a formula. For the checker we ask you to plug a value into the formula. For your pset you still need to give the whole formula.\n//DEBUG PARAMETERS //Because we don\u0026rsquo;t show solutions for pset checkers we use //this to give a showanswer button during the debugging phase var debugans = undefined; //release //var debugans = kDebugAnswer; //debug problemNumber = 0; wl(\u0026quot;\u0026lt;h3\u0026gt;Calculator\u0026lt;/h3\u0026gt;\u0026quot;); writecalculator(\u0026ldquo;psetcheckcalcid\u0026rdquo;, \u0026ldquo;Calculate\u0026rdquo;); whr(kdivcol,kdivwid);\n//Problem 1 problemNumber++; wl(problemheader(problemNumber)); wl(kp); var s; var partName, problemName, buttonLabel, answerArray, correct; s = [\u0026ldquo;Using what you\u0026rsquo;ve learned about R, simulate rolling one die 100000 times and compute the average of the 100000 rolls.\u0026rdquo;, kbr, \u0026ldquo;(You should use the sample() and mean() functions.)\u0026rdquo;]; wl(s.join(\u0026rsquo; \u0026lsquo;)); wl(kp); partName = problemNumber; problemName = \u0026ldquo;prob\u0026rdquo; + partName; buttonLabel = \u0026ldquo;Check problem \u0026quot; + partName; writeNumericBox(partName+\u0026ldquo;id\u0026rdquo;, 3.5, buttonLabel, 0.05, \u0026ldquo;3.5 (anything close)\u0026rdquo;); whr(kdivcol,kdivwid);\n//Problem 2 problemNumber++; wl(problemheader(problemNumber)); wl(kp); var s; var partName, problemName, buttonLabel, answerArray, correct; s = [\u0026ldquo;In a sequence of numbers a run is a subsequence of the same number.\u0026rdquo;, \u0026ldquo;For example \u0026ldquo;, kp, ksp,ksp,ksp,\u0026quot;(1,1,1,2,3,3,3,1,1)\u0026rdquo;, kp, \u0026ldquo;has a run of 1\u0026rsquo;s of length 3, a run of 2\u0026rsquo;s of length 1, \u0026ldquo;, \u0026ldquo;a run of 3\u0026rsquo;s of length 3 and a run of 1\u0026rsquo;s of length 2.\u0026rdquo;, kp, \u0026ldquo;The R function rle() helps compute the run lengths in a sequence. \u0026ldquo;, \u0026ldquo;Try running the following code\u0026rdquo;]; wl(s.join(\u0026rsquo; \u0026lsquo;)); wl(kp); s = [rcmdna(\u0026ldquo;x = c(1,1,1,2,3,3,3,1,1)\u0026rdquo;), kbr, rcmdna(\u0026ldquo;y = rle(x)\u0026rdquo;), kbr, rcmdna(\u0026ldquo;y\u0026rdquo;)]; wl(s.join(\u0026rsquo; \u0026lsquo;)); wl(kp); s = [\u0026ldquo;You should see the following\u0026rdquo;, kbr, rtext(\u0026ldquo;Run Length Encoding\u0026rdquo;), kbr, ksp,ksp,ksp, rtext(\u0026ldquo;lengths: int [1:4] 3 1 3 2\u0026rdquo;), kbr, ksp,ksp,ksp, rtext(\u0026ldquo;values : num [1:4] 1 2 3 1\u0026rdquo;)]; wl(s.join(\u0026rsquo; \u0026lsquo;)); wl(kp) s = [\u0026ldquo;The lengths vector shows the runs in \u0026quot; + rtext(\u0026ldquo;x\u0026rdquo;), \u0026quot; and the values vector shows the number used for each run. \u0026ldquo;, \u0026ldquo;To pick out just the lengths vector you use the command:\u0026rdquo;, ksp, rtext(\u0026ldquo;y$lengths\u0026rdquo;), kp, \u0026ldquo;You should see: \u0026quot; + ksp + rtext(\u0026rdquo;[1] 3 1 3 2\u0026rdquo;)]; wl(s.join(\u0026rsquo; \u0026lsquo;)); wl(kp) s = [\u0026ldquo;Run the code\u0026rdquo;, kbr, rtext(\u0026ldquo;set.seed(10)\u0026rdquo;), kbr, rtext(\u0026ldquo;y = rbinom(20,1,.5)\u0026rdquo;)]; wl(s.join(\u0026rsquo; \u0026lsquo;)); wl(kp) s = [rtext(\u0026ldquo;y\u0026rdquo;), \u0026quot; is a vector of 0\u0026rsquo;s and 1\u0026rsquo;s of length 20. Use \u0026ldquo;, rtext(\u0026ldquo;rle(y) \u0026ldquo;), \u0026quot; to find the length of the longest run in \u0026ldquo;, rtext(\u0026ldquo;y.\u0026rdquo;)]; wl(s.join(\u0026rsquo; \u0026lsquo;)); wl(kp) partName = problemNumber; problemName = \u0026ldquo;prob\u0026rdquo; + partName; buttonLabel = \u0026ldquo;Check problem \u0026quot; + partName; writeNumericBox(partName+\u0026ldquo;id\u0026rdquo;, 5, buttonLabel, 0.001, kuseCorrectVal); whr(kdivcol,kdivwid);\n"}


