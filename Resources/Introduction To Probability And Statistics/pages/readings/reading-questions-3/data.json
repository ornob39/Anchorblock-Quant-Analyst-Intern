
{
  "title":"Reading Questions 3",
  "content":" Reading Questions Answer Checker To check your answers put them in the appropriate box and click the \u0026lsquo;Check\u0026rsquo; button. Every checker box can do arithmetic and calculate standard functions (see calculator help). If you give decimal answers, give them to at least 3 decimal places.\nAs you work you should have pencil and paper handy for calculations and thinking!\nNote: some questions ask for a formula. For the checker we ask you to plug a value into the formula. For your pset you still need to give the whole formula.\n//DEBUG PARAMETERS //Because we don\u0026rsquo;t show solutions for pset checkers we use //this to give a showanswer button during the debugging phase var debugans = undefined; //release //var debugans = kDebugAnswer; //debug problemNumber = 0; wl(\u0026quot;\u0026lt;h3\u0026gt;Calculator\u0026lt;/h3\u0026gt;\u0026quot;); writecalculator(\u0026ldquo;psetcheckcalcid\u0026rdquo;, \u0026ldquo;Calculate\u0026rdquo;); whr(kdivcol,kdivwid);\n//Problem 1 problemNumber++; wl(problemheader(problemNumber)); wl(kp); var s; var partName, problemName, buttonLabel, answerArray, correct; s = [\u0026ldquo;You roll two dice. Consider the following events.\u0026rdquo;, kbr, \u0026ldquo;$A$ = \u0026lsquo;first die is 3\u0026rsquo;\u0026rdquo;, kbr, \u0026ldquo;$B$ = \u0026lsquo;sum is 7\u0026rsquo;\u0026rdquo;, kbr, \u0026ldquo;$C$ = \u0026lsquo;sum is greater than or equal to 7\u0026rsquo;\u0026rdquo;]; wl(s.join(\u0026rsquo; \u0026lsquo;)); wl(kp); s = [\u0026quot;(a) Compute $P(B)$.\u0026quot;]; wl(s.join(\u0026rsquo; \u0026lsquo;)); wl(kp); partName = problemNumber + \u0026quot; (a)\u0026quot;; problemName = \u0026ldquo;prob\u0026rdquo; + partName; buttonLabel = \u0026ldquo;Check problem \u0026quot; + partName; writeNumericBox(partName+\u0026ldquo;id\u0026rdquo;, .16667, buttonLabel, 0.001, \u0026ldquo;1/6 ≈ 0.16667\u0026rdquo;); wl(kp); s = [\u0026quot;(b) Compute $P(B|A)$.\u0026rdquo;]; wl(s.join(\u0026rsquo; \u0026lsquo;)); wl(kp); partName = problemNumber + \u0026quot; (b)\u0026quot;; problemName = \u0026ldquo;prob\u0026rdquo; + partName; buttonLabel = \u0026ldquo;Check problem \u0026quot; + partName; writeNumericBox(partName+\u0026ldquo;id\u0026rdquo;, .16667, buttonLabel, 0.001, \u0026ldquo;1/6 ≈ 0.16667\u0026rdquo;); wl(kp); s = [\u0026quot;(c) Compute $P(B|C)$.\u0026rdquo;]; wl(s.join(\u0026quot; \u0026ldquo;)); wl(kp); partName = problemNumber + \u0026quot; (c)\u0026rdquo;; problemName = \u0026ldquo;prob\u0026rdquo; + partName; buttonLabel = \u0026ldquo;Check problem \u0026quot; + partName; writeNumericBox(partName+\u0026ldquo;id\u0026rdquo;, .28571, buttonLabel, 0.001, \u0026ldquo;6/21 ≈ 0.2857\u0026rdquo;); wl(kp); s = [\u0026quot;(d) Are $A$ and $B$ indepenendent\u0026rdquo;]; wl(s.join(\u0026quot; \u0026ldquo;)); wl(kbr); partName = problemNumber + \u0026quot; (d)\u0026rdquo;; problemName = \u0026ldquo;prob\u0026rdquo; + partName; buttonLabel = \u0026ldquo;Check problem \u0026quot; + partName; correct = \u0026ldquo;Yes\u0026rdquo; var answerArray = [correct,\u0026ldquo;No\u0026rdquo;]; writeMultipleChoiceRadioGroup(answerArray, problemName, correct, buttonLabel); wl(kp); s = [\u0026quot;(e) Are $B$ and $C$ indepenendent\u0026rdquo;]; wl(s.join(\u0026quot; \u0026ldquo;)); wl(kbr); partName = problemNumber + \u0026quot; (e)\u0026rdquo;; problemName = \u0026ldquo;prob\u0026rdquo; + partName; buttonLabel = \u0026ldquo;Check problem \u0026quot; + partName; correct = \u0026ldquo;No\u0026rdquo; var answerArray = [\u0026lsquo;Yes\u0026rsquo;,correct]; writeMultipleChoiceRadioGroup(answerArray, problemName, correct, buttonLabel); whr(kdivcol,kdivwid);\n//Problem 2 problemNumber++; wl(problemheader(problemNumber)); wl(kp); var s; var partName, problemName, buttonLabel, answerArray, correct; s = [\u0026ldquo;Draw two cards from a deck.\u0026rdquo;, kbr, \u0026ldquo;Let $S_1$ = `first card is a spade\u0026rsquo;.\u0026rdquo;, kbr, \u0026ldquo;Let $S_2$ = `second card is a spade\u0026rsquo;.\u0026rdquo;, kp, \u0026ldquo;What is $P(S_2 | S_1^c)$?\u0026rdquo;]; wl(s.join(\u0026rdquo; \u0026ldquo;)); wl(kp); partName = problemNumber; problemName = \u0026ldquo;prob\u0026rdquo; + partName; buttonLabel = \u0026ldquo;Check problem \u0026quot; + partName; writeNumericBox(partName+\u0026ldquo;id\u0026rdquo;, .25490, buttonLabel, 0.001, \u0026ldquo;13/51 ≈ 0.2549\u0026rdquo;); whr(kdivcol,kdivwid);\n//Problem 3 problemNumber++; wl(problemheader(problemNumber)); var s; var partName, problemName, buttonLabel, answerArray, correct; s = [\u0026ldquo;Start with an urn with 5 red and 3 blue balls in it. Draw one ball. Put that ball back in the urn along with another ball of the same color.\u0026rdquo;, kbr, \u0026ldquo;Now draw another ball from the urn\u0026rdquo;]; wl(s.join(\u0026rsquo; \u0026lsquo;)); wl(kp); s = [\u0026quot;(a) What is the probability the second ball is red?\u0026rdquo;]; wl(s.join(\u0026rsquo; \u0026lsquo;)); wl(kp); partName = problemNumber + \u0026quot; (a)\u0026rdquo;; problemName = \u0026ldquo;prob\u0026rdquo; + partName; buttonLabel = \u0026ldquo;Check problem \u0026quot; + partName; writeNumericBox(partName+\u0026ldquo;id\u0026rdquo;, .625, buttonLabel, 0.001, kuseCorrectVal); wl(kp); s = [\u0026quot;(b) Suppose the second ball is red. What is the probability the first ball was blue.\u0026rdquo;]; wl(s.join(\u0026rsquo; \u0026lsquo;)); wl(kp); partName = problemNumber + \u0026quot; (b)\u0026quot;; problemName = \u0026ldquo;prob\u0026rdquo; + partName; buttonLabel = \u0026ldquo;Check problem \u0026quot; + partName; writeNumericBox(partName+\u0026ldquo;id\u0026rdquo;, 1/3, buttonLabel, 0.001, \u0026ldquo;1/3 ≈ .3333\u0026rdquo;); wl(kbr); whr(kdivcol,kdivwid);\n"}


